%% get_transformation
% find the registrations of a set of regions in the image_group to the
% moving_rotated_image_clip
%%
function [transformation_output] = ...
    get_transformation_on_regions(...
    image_group, moving_image_clip, input_reg_data) 
%
n_tiles = length(image_group.control_point_idx);
transformation_output = cell(n_tiles,1);
input_reg_data.moving_clip_size = size(moving_image_clip);
%
for image_count = 1:n_tiles
    %
    current_fixed_image.filename = fullfile(...
        image_group.fixed_image_files(image_count).folder,...
        image_group.fixed_image_files(image_count).name);
    %
    current_fixed_image.image = read_component_images(...
        current_fixed_image.filename, ...
        input_reg_data.tile_ncomponents, 0,...
        input_reg_data.tile_height,...
        input_reg_data.tile_width);
    %
    current_fixed_image.coordinates = ...
        image_group.cluster_relative_control_pt_coordinates(image_count,:);
    %
    transformation_output{image_count} = ...
        get_transformation_on_region(...
        moving_image_clip, current_fixed_image, input_reg_data);
    %
    for resolution_count = 1:length(transformation_output{image_count})
        transformation_output{...
            image_count}(resolution_count).control_point_idx = ...
            image_group.control_point_idx(image_count);
        transformation_output{...
            image_count}(resolution_count).cluster_search_region = ...
            image_group.cluster_search_region;
        transformation_output{...
            image_count}(resolution_count).new_coordinates = ...
            transformation_output{...
            image_count}(resolution_count).upper_left_corner(1:2) + ...
            double(transformation_output{...
            image_count}(resolution_count).cluster_search_region([3 1]));
        if strcmp(input_reg_data.opt, 'affine_transformation')
            transformation_output{image_count}(...
                resolution_count).new_coordinates = ...
                transformation_output{image_count}(...
                resolution_count).new_coordinates - 1;
        end
    end
    %
end
%
transformation_output = [transformation_output{:}];
%
end